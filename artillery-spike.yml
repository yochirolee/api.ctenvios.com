config:
   target: "http://localhost:3000"
   http:
      timeout: 30
   defaults:
      headers:
         Authorization: "Bearer p5TAuBi2u8lH3JUV9a7E3kNCPuPvDDV4"
   phases:
      # Simulate sudden traffic spikes
      - duration: 30
        arrivalRate: 5
        name: "Normal baseline"
      - duration: 10
        arrivalRate: 200 # SPIKE!
        name: "SPIKE 1 - 200 req/s"
      - duration: 30
        arrivalRate: 10
        name: "Recovery 1"
      - duration: 15
        arrivalRate: 150 # SPIKE!
        name: "SPIKE 2 - 150 req/s"
      - duration: 30
        arrivalRate: 10
        name: "Recovery 2"
      - duration: 20
        arrivalRate: 250 # MASSIVE SPIKE!
        name: "SPIKE 3 - 250 req/s"
      - duration: 60
        arrivalRate: 10
        name: "Final recovery"
   processor: "./artillery-processor.js"
   plugins:
      metrics-by-endpoint:
         useOnlyRequestNames: true

scenarios:
   # Initialize data from database before running any scenarios
   - name: "Initialize Database Data"
     weight: 1
     flow:
        - function: "initializeData"
   - name: "Spike Test - Simple Orders"
     weight: 100
     flow:
        - function: "generateOrderData"
        - post:
             url: "/api/v1/orders"
             headers:
                Content-Type: "application/json"
             json:
                agency_id: "{{ agency_id }}"
                user_id: "{{ user_id }}"
                customer_id: "{{ customer_id }}"
                receiver_id: "{{ receiver_id }}"
                service_id: "{{ service_id }}"
                items: "{{ items }}"
                paid_in_cents: "{{ paid_in_cents }}"
                total_in_cents: "{{ total_in_cents }}"
             expect:
                - statusCode: [200, 201, 408, 429, 500, 502, 503, 504] # Allow failures during spikes

